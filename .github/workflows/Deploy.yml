# name: Build and push microservices
# on:
#   push:
#     branches:
#       - develop
#     paths:
#       - TicketsManager/**
#       - OcelotApiGateway/**
#       - UserManager/**
#       - .github/**

# jobs:
#   deploy_api_gateway:
#     env:
#       SSH_HOST: ${{ secrets.SSH_HOST }}
#       SSH_USER: ${{ vars.REMOTE_USER }}
#       SSH_KEY: ${{ secrets.SSH_KEY }}
#       ENVNAME: ${{ vars.ENVNAME }} 
#       MICROSERVICE_NAME: 'api_gateway'

#     runs-on: ubuntu-latest
#     steps:
#       - name: Get Code
#         uses: actions/checkout@v3
      
#       - name: Build and push image
#         id: build-push-image
#         uses: "./.github/templates/PushImage"
#         with: 
#           MicroServiceName: ticket_manager
#           Environment: ${{ env.ENVNAME }}
#           MicrserviceProjectPath: ./OcelotApiGateway/
#           DockerfilePath: ./OcelotApiGateway.Api/Dockerfile
#           GithubToken: ${{ secrets.GITHUB_TOKEN }}

#   deploy:
#       env:
#         SSH_HOST: ${{ secrets.SSH_HOST }}
#         SSH_USER: ${{ vars.REMOTE_USER }}
#         SSH_KEY: ${{ secrets.SSH_KEY }}
#         ENVNAME: ${{ vars.ENVNAME }} 
#         MICROSERVICE_NAME: 'user_manager'

#       runs-on: ubuntu-latest
#       steps:
#         - name: Get Code
#           uses: actions/checkout@v3
        
#         - name: Build and push image
#           id: build-push-image
#           uses: "./.github/templates/PushImage"
#           with: 
#             MicroServiceName: user_manager
#             Environment: ${{ env.ENVNAME }}
#             MicrserviceProjectPath: ./UserManager/
#             DockerfilePath: ./UserManager.Api/Dockerfile
#             GithubToken: ${{ secrets.GITHUB_TOKEN }}

#   deploy_tiket_manager:
#     env:
#       SSH_HOST: ${{ secrets.SSH_HOST }}
#       SSH_USER: ${{ vars.REMOTE_USER }}
#       SSH_KEY: ${{ secrets.SSH_KEY }}
#       ENVNAME: ${{ vars.ENVNAME }} 
#       MICROSERVICE_NAME: 'ticket_manager'

#     runs-on: ubuntu-latest
#     steps:
#       - name: Get Code
#         uses: actions/checkout@v3
      
#       - name: Build and push image
#         id: build-push-image
#         uses: "./.github/templates/PushImage"
#         with: 
#           MicroServiceName: ticket_manager
#           Environment: ${{ env.ENVNAME }}
#           MicrserviceProjectPath: ./TicketsManager/
#           DockerfilePath: ./TicketsManager.Api/Dockerfile
#           GithubToken: ${{ secrets.GITHUB_TOKEN }}