name: Build and deploy API Gateway
on:
  push:
    branches:
      - master-updated-architecture-config
    paths:
      - OcelotApiGateway/**
      - .github/workflows/DeployGateway.yml

env:
  ENVNAME: ${{ vars.ENVNAME }} 

jobs:
  build_api_gateway:
    permissions:
      contents: read
      packages: write
      
    env:  
      MICROSERVICE_NAME: 'api_gateway'
      PROJECT_PATH: './OcelotApiGateway/'
      CONTEXT: '.'
      DOCKERFILEPATH: './OcelotApiGateway/Dockerfile'

    outputs:
      MicroserviceName: ${{ steps.build-n-push.outputs.MicroserviceName }}
      MicroserviceImage: ${{ steps.build-n-push.outputs.MicroserviceImage }}

    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Build and push image of API Gateway
        id: build-n-push
        uses: ./.github/actions/Build-n-push
        with: 
          MicroserviceName: ${{ env.MICROSERVICE_NAME }}
          Environment: ${{ env.ENVNAME }}
          ProjectPath: ${{ env.PROJECT_PATH }}
          Context: ${{ env.CONTEXT }}
          DockerfilePath: ${{ env.DOCKERFILEPATH }}
          Token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest

    environment: 
      name: ${{ github.ref == 'refs/heads/pre-release' && 'development' ||  'test-env' }}

    needs: build_api_gateway

    env:
      URL: ${{ needs.build_api_gateway.outputs.MicroserviceImage }}

    steps:
      - name: Login to docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }} 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/${{ env.URL }}'
