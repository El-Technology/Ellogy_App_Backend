name: Build image and push

inputs:
  ACR_server:
    required: true
  ACR_username:
    required: true
  ACR_passwd:
    required: true

  Project_path:
    required: true
  Dockerfile_path:
    required: true
  Context:
    required: true

  Customer_ID:
    required: true
  Microservice_name:
    required: true
  Environment:
    required: true
  Image_tag_num:
    required: true
    
outputs:
  MicroSRVC_Name:
    value: ${{ steps.build-n-push_image.outputs.MicroSRVC_Name }}         # Expose the output
  MicroSRVC_Image:
    value: ${{ steps.build-n-push_image.outputs.MicroSRVC_Image }}        # Expose the output

 
runs:
  using: "composite"
  steps:
    - name: Login to ACR (AzureContainerRepository)
      id: container-repository
      uses: azure/docker-login@v2
      with:
        login-server: ${{ inputs.ACR_server }}
        username: ${{ inputs.ACR_username }}
        password: ${{ inputs.ACR_passwd }}

    - name: Build, tag, and push docker image to GitHub Packages
      id: build-n-push_image
      shell: bash
      env:
        MicroSRVC_name: ${{ inputs.Microservice_name }}
        MicroSRVC_image: ${{ inputs.ACR_server }}/${{ inputs.Customer_ID }}/${{ inputs.Microservice_name }}:${{ inputs.Environment }}-${{ inputs.Image_tag_num }}
      run: |
        cd ${{ inputs.Project_path }}
        docker build -t ${MicroSRVC_image} -f ${{ inputs.Dockerfile_path }} ${{ inputs.Context }}
        docker push ${MicroSRVC_image}

        echo "MicroSRVC_Name=${MicroSRVC_name}" >> $GITHUB_OUTPUT           # Set output
        echo "MicroSRVC_Image=${MicroSRVC_image}" >> $GITHUB_OUTPUT           # Set output


#===============================================================================================
#   Delete old images
#-----------------------------------------------------------------------------------------------
    # - name: Get lowercase package name
    #   id: Repo-Name_lowercase
    #   uses: ASzc/change-string-case-action@v6
    #   env:
    #     PACKAGE_NAME: ${{ inputs.ACR_SERVER }}/${{ inputs.Customer_ID }}/${{ inputs.Microservice_name }}
    #   with:
    #     string: ${{ env.PACKAGE_NAME }}

    - name: Delete old images
      id: delete-images
      continue-on-error: true
      uses: actions/delete-package-versions@v5
      with:
        package-name: ${{ inputs.ACR_server }}/${{ inputs.Customer_ID }}/${{ inputs.Microservice_name }}
        package-type: 'container'
        min-versions-to-keep: 2
        
